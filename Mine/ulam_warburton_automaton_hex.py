#!/usr/bin/env checkio --domain=py run ulam-warburton-automaton-hex

# 
# 
# This mission is dedicated to hexagonal version theUlamâ€“Warburton cellular automaton (UWCA)- a 2-dimensional fractal pattern that grows on a regular grid of cells consisting of hexagon's.
# 
# Starting with one hexagon initially ON and all others OFF, successive iterations are generated by turning ON all hexagons that share precisely one edge with an ON hexagon.
# 
# This pattern is shown among others (so I recommend you to watch it all) in the following video with Neil Sloane (founder of theOn-Line Encyclopedia of Integer Sequences) starting from the 11.50.
# 
# 
# 
# Theplaygroundof this and other patterns may be seen on thepage. It will be easier to solve the task and it's just a beautiful hypnotic view!)
# 
# So, your function must return the number of activated cells after given number of steps.
# 
# Input:Number of steps as integer.
# 
# Output:Number of cells as integer.
# 
# Examples:
# 
# assert automaton(1) == 1
# assert automaton(2) == 7
# assert automaton(3) == 13
# assert automaton(4) == 31
# 
# END_DESC

def automaton(step: int) -> int:
    # your code here
    return 0


print("Example:")
print(automaton(2))

# These "asserts" are used for self-checking
assert automaton(1) == 1
assert automaton(2) == 7
assert automaton(3) == 13
assert automaton(4) == 31
assert automaton(5) == 37

print("The mission is done! Click 'Check Solution' to earn rewards!")